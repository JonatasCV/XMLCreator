
import XMLHandler.XMLHandler;
import com.sun.org.apache.xml.internal.serialize.OutputFormat;
import com.sun.org.apache.xml.internal.serialize.XMLSerializer;
import java.io.File;
import java.io.FileOutputStream;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dotah
 */
public class CRUDPanel extends javax.swing.JFrame {

    public static XMLHandler xHandler = new XMLHandler();
    public static Object[] options = { "Sim", "Não", "Cancelar" };
    /**
     * Creates new form CRUDPanel
     */
    public CRUDPanel() {
        initComponents();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jbtnAdd = new javax.swing.JButton();
        jrbtnArtist = new javax.swing.JRadioButton();
        jrbtnAlbum = new javax.swing.JRadioButton();
        jrbtnTrack = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbArtists = new javax.swing.JTable();
        jbtnRemove = new javax.swing.JButton();
        jbtnSearch = new javax.swing.JButton();
        jbtnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Music XML Creator");
        setLocation(new java.awt.Point(500, 200));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jbtnAdd.setText("Adicionar");
        jbtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrbtnArtist);
        jrbtnArtist.setText("Artista");

        buttonGroup1.add(jrbtnAlbum);
        jrbtnAlbum.setText("Album");

        buttonGroup1.add(jrbtnTrack);
        jrbtnTrack.setText("Música");

        jtbArtists.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Gênero"
            }
        ));
        jScrollPane2.setViewportView(jtbArtists);

        jbtnRemove.setText("Remover");
        jbtnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRemoveActionPerformed(evt);
            }
        });

        jbtnSearch.setText("Buscar");
        jbtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchActionPerformed(evt);
            }
        });

        jbtnUpdate.setText("Modificar");
        jbtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jrbtnArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(jrbtnAlbum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jrbtnTrack))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbtnArtist)
                    .addComponent(jrbtnAlbum)
                    .addComponent(jrbtnTrack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddActionPerformed
        if(jrbtnArtist.isSelected()){
            while(true){
                String name = JOptionPane.showInputDialog("Digite o nome da banda.");
                String genre = JOptionPane.showInputDialog("Digite o gênero da banda.");
                
                int opt = JOptionPane.showOptionDialog(null,
				"Confirma os dados inseridos?\nArtista: " + name + "\nGênero: " + genre,
				"Confirme os dados", JOptionPane.YES_NO_CANCEL_OPTION,
				JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                
                if(opt == 0 || opt == 2){
                    xHandler.addArtist(name, genre);
                    break;
                }
            }
        }else if(jrbtnAlbum.isSelected()){
            while(true){
                String artist = JOptionPane.showInputDialog("Digite o artista.");
                String name = JOptionPane.showInputDialog("Digite o nome do álbum.");
                String year = JOptionPane.showInputDialog("Digite o ano de lançamento.");
                
                int opt = JOptionPane.showOptionDialog(null,
				"Confirma os dados inseridos?\nArtista: " + artist + "\nÁlbum: " + name + "\nAno: " + year,
				"Confirme os dados", JOptionPane.YES_NO_CANCEL_OPTION,
				JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                
                if(opt == 0 || opt == 2){
                    xHandler.addAlbum(artist, name, year);
                    break;
                }
            }
        }else if(jrbtnTrack.isSelected()){
            while(true){
                String artist = JOptionPane.showInputDialog("Digite o artista.");
                String album = JOptionPane.showInputDialog("Digite o álbum.");
                String name = JOptionPane.showInputDialog("Digite o nome da música.");
                String duration = JOptionPane.showInputDialog("Digite a duração da música.");
                
                int opt = JOptionPane.showOptionDialog(null,
				"Confirma os dados inseridos?\nArtista: " + artist + "\nÁlbum: " + album + "\nMúsica: " + name + "\nDuração: " + duration,
				"Confirme os dados", JOptionPane.YES_NO_CANCEL_OPTION,
				JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                
                if(opt == 0 || opt == 2){
                    xHandler.addTrack(artist, album, name, duration);
                    break;
                }
            }
        }
    }//GEN-LAST:event_jbtnAddActionPerformed

    private void jbtnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRemoveActionPerformed
        if(jrbtnArtist.isSelected()){
            while(true){
                String name = JOptionPane.showInputDialog("Digite o nome da banda.");
                
                int opt = JOptionPane.showOptionDialog(null,
				"Confirma os dados inseridos?\nArtista: " + name,
				"Confirme os dados", JOptionPane.YES_NO_CANCEL_OPTION,
				JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                
                if(opt == 0 || opt == 2){
                    xHandler.removeArtist(name);
                    break;
                }
            }
        }else if(jrbtnAlbum.isSelected()){
            while(true){
                String artist = JOptionPane.showInputDialog("Digite o artista.");
                String name = JOptionPane.showInputDialog("Digite o nome do álbum.");
                
                int opt = JOptionPane.showOptionDialog(null,
				"Confirma os dados inseridos?\nArtista: " + artist + "\nÁlbum: " + name,
				"Confirme os dados", JOptionPane.YES_NO_CANCEL_OPTION,
				JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                
                if(opt == 0 || opt == 2){
                    xHandler.removeAlbum(artist, name);
                    break;
                }
            }
        }else if(jrbtnTrack.isSelected()){
            while(true){
                String artist = JOptionPane.showInputDialog("Digite o artista.");
                String album = JOptionPane.showInputDialog("Digite o álbum.");
                String name = JOptionPane.showInputDialog("Digite o nome da música.");
                
                int opt = JOptionPane.showOptionDialog(null,
				"Confirma os dados inseridos?\nArtista: " + artist + "\nÁlbum: " + album + "\nMúsica: " + name,
				"Confirme os dados", JOptionPane.YES_NO_CANCEL_OPTION,
				JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                
                if(opt == 0 || opt == 2){
                    xHandler.removeTrack(artist, album, name);
                    break;
                }
            }
        }
    }//GEN-LAST:event_jbtnRemoveActionPerformed

    private void jbtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSearchActionPerformed
        if(jrbtnArtist.isSelected()){
            while(true){
                String name = JOptionPane.showInputDialog("Digite o nome da banda.");
                
                int opt = JOptionPane.showOptionDialog(null,
				"Confirma os dados inseridos?\nArtista: " + name,
				"Confirme os dados", JOptionPane.YES_NO_CANCEL_OPTION,
				JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                
                if(opt == 0 || opt == 2){
                    xHandler.searchArtist(name);
                    break;
                }
            }
        }else if(jrbtnAlbum.isSelected()){
            while(true){
                String artist = JOptionPane.showInputDialog("Digite o artista.");
                String name = JOptionPane.showInputDialog("Digite o nome do álbum.");
                
                int opt = JOptionPane.showOptionDialog(null,
				"Confirma os dados inseridos?\nÁlbum: " + name,
				"Confirme os dados", JOptionPane.YES_NO_CANCEL_OPTION,
				JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                
                if(opt == 0 || opt == 2){
                    xHandler.searchAlbum(name);
                    break;
                }
            }
        }else if(jrbtnTrack.isSelected()){
            while(true){
                String name = JOptionPane.showInputDialog("Digite o nome da música.");
                
                int opt = JOptionPane.showOptionDialog(null,
				"Confirma os dados inseridos?\nMúsica: " + name,
				"Confirme os dados", JOptionPane.YES_NO_CANCEL_OPTION,
				JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
                
                if(opt == 0 || opt == 2){
                    xHandler.searchTrack(name);
                    break;
                }
            }
        }
    }//GEN-LAST:event_jbtnSearchActionPerformed

    private void jbtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUpdateActionPerformed
        if(jrbtnArtist.isSelected()){
            
        }else if(jrbtnAlbum.isSelected()){
            
        }else if(jrbtnTrack.isSelected()){
            
        }
    }//GEN-LAST:event_jbtnUpdateActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        xHandler.saveFile();
    }//GEN-LAST:event_formWindowClosing
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUDPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUDPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUDPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUDPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        if (xHandler.searchFile()){
            xHandler.openFile();
        } else {           
            
            if(JOptionPane.showOptionDialog(null,
				"Arquivo artists.xml não existe, deseja criá-lo?",
				"Arquivo", JOptionPane.YES_NO_OPTION,
				JOptionPane.QUESTION_MESSAGE, null, options, options[0]) == 0){
                
                xHandler.startFile();            
            }else {
                System.exit(0);
            }
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUDPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnAdd;
    private javax.swing.JButton jbtnRemove;
    private javax.swing.JButton jbtnSearch;
    private javax.swing.JButton jbtnUpdate;
    private javax.swing.JRadioButton jrbtnAlbum;
    private javax.swing.JRadioButton jrbtnArtist;
    private javax.swing.JRadioButton jrbtnTrack;
    private javax.swing.JTable jtbArtists;
    // End of variables declaration//GEN-END:variables
}
